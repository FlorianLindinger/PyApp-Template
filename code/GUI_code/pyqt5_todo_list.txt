#######################
pyqt5 todo list
######################

make a reset option in q classes and reset all childs that are q classes. maybe find them via new mother class 

have to define function to turn dummy off->stop connection.  Alos for turning on
never safe to turn off during main loop

same for change in com. generally for random stop connection? make it global bool and make the main loop stop and start

maybe need on_change, on_off, on_on functions with strings and lists for mulitple options. if not button spam could make problems

for dummy_checkbox: on change->reset = True,state = state
I guess just give up and define function

def on_dummy_checkbox_change():
    global restart_connection
    restart_connection=True
    
make labels on_on and on_off to True and on_change to state


turn off dummy camera correctly even if main loop in between

#move in bulb Q_dim_color

make globals-funcitomn verion of Q classes defione theier start value as global
add option to auto add different direction for globals-funcitomn  via add_globals_check

add option for Q class function to jsut change a global var to res

is Q_handle_label_positioning efficient for no label? does it just avoid extra widget and elems?

make somehow global variable change noticed by GUI->quick check every cycle that triggers GUI stuff

add float slider

make stretcher divison more visible

fix default geometry fallback
=make defauilt sizes alrger for no settings

look at docks and toolbars from Q

add  QRadioButton, QButtonGroup

make a hideable zoom in pane where i have a zoom slider up to 10 by 10 and square. make it use same size for any zoom level

make easitly anything in a q class acessible to outside function

sibar settings ->state
maybe auto possible or every Q_something class and pass that automaticall in the sidebar.add if available

make not scrollable for int selectrr for example. even for just hoveriung

make everything in sidebar max small exepct output

make double click on scrollbar auto set size or maybe collapse

make sure it does:
class _QSpinBox_noSelect_clamped(QSpinBox):
    """does not select the value when changed and changes the value to max/min value instead of preventing to enter it. Commits value on change
make also mode where commit on enter and exit
comboine wtih _helper_Q_int_selector

do restore stater after child init

save old width in sidebar

fix window size being slightly off

make sidebar going below min size same as collapse and expand now actually expands

make title line also scrollable with minimum width and not collapseanlwe

make sidebar title and hover over button title appear

make q sidebar more general and every direction possible

make a print traceback function that prints in warn autoamticall and also message befoer

maybe directly singal a frame is ready and only update if new ->check get_image

make a more general main_looped_function

in GUI class :   #see what self. i need and remove? or even add more self. in init

decide what log in GUI class should do and where update content sjould print

slider for zoom window

add results box widget like sidebar

have small folder exploere button next to path field 

have open button to folder/file selector

stop start button connection...

maybe global running params in GUI class

decrease cpu usage especially if minimized

add stop window to stop_program?
or just print stopped and leave open?

make placeholder middle?

make list dropwodwn middle?

move no_connection_frame to GUI?
all serial stuff not there?

add button to show fit

define remove regex funciton

remove (COMx) from lists with regex

add line of major minor gaussian fit like wincam

add slider with min checkbox and values form 0-100. test if safe for larger than max

add locked_data features to other

have close method?

make terminal output have strech inf

add app.aboutToQuit.connect(stop_connection)
 as on_close_function in image GUI

#single history terminal out mode

colored pbar seems to take more space

highleight full text when howering over dropwdown

some indicator flash that terminal got new conetne

in horiozontal mode have size as list and relative

it fitts despite off

add update title function

fix integer selector

add auto ending to file path option

make button red for over power and yellow for over 80%

make Q_handle_label_positioning into parent class super init

avg has problems

make slider but withozut slider so basically float selector

auto get inputs from locals in Q_handle_label_positioning

add auto trigger by namign self.trigger_function

number of averages acts weird

make collapsalbe sub seciotn in sidebear

make all like:
        super().__init__()
        self.widget=QWidget()
        Q_handle_label_positioning(self, label, label_pos)

make it easier to get states from GUI in outside functions

add a close function to ImageGUI

have no camera image

def _enable_win_ansi_vt():
    if os.name != "nt": return
    try:
        import ctypes
        k = ctypes.windll.kernel32
        h = k.GetStdHandle(-11)  # STD_OUTPUT_HANDLE
        mode = ctypes.c_uint()
        if k.GetConsoleMode(h, ctypes.byref(mode)):
            k.SetConsoleMode(h, mode.value | 0x0004)  # ENABLE_VIRTUAL_TERMINAL_PROCESSING
    except Exception:
        pass

_enable_win_ansi_vt()



make terminal output more gray to indicate not clockable if no text editable. also for others

add green light to main title line for anything. also yellow or abruitry color with hover message

do i need to connect self.trigger instead of self.xyz-function

mode where i keep gloabal print and auto to log priont or not 

add pause/start global print mehtod to  Q_terminal

auto add clear button to Q_terminal

make import less polluting for sub py files

prevent strech if q-terminal get added ad make it act like strech

add save thread kill for crashed startup

add is_com_port function

add improvements of com port drowpdonow to normal drowpowaer

make com port into integer native

have for popup the previous selected if existong

line on top?

addd optiopn for object.on_x_function to change later by disconnectiong and reconnecting. also add via default (None working?)

add timeout to gaussian fit

prevent add strech for terminal output? and no add line?

allow for coloar and everything for no log output terminal present

for no window top bar the icon in taskbar is wrong

use QSettings to rememer gui and last state i guess. add option to reset or remember setting on new start and a default value if none givem. add reset settings button

hide everythin in window widget. only stuff that needed in self layer


add style to total window. maybe just dark theme

add auto close to popup if neeed for main windwo close
add option to x buttin in popup

# 2. Settings Management
# A centralized config manager that loads/saves settings (window size, last opened files, preferences).
# Use QSettings for platform-native persistent storage.

# help popup

# top menu buttons that dropdown options

# undo of individual boxes and total GUI

# pbar with bold font of status or fixed text

# save button with popup of path

# make functions to put window to foregorund or blink in taskbar or hide or go to small icon taskbar

# template for registering keyboard shortcuts


# add sanatize input functions

# popup for crashes . maybe to general hidden function?

# roi image selection. cut to that button. zoom in and out where x is set. add remove grid....

# 16. Interactive Graphs and Plots
# Embed matplotlib or pyqtgraph plots with zoom, pan, and tooltips.

# prevent closing option and detection of closing/ windwos shutdown

# display release version somewhere

# float slider

# sanitize . and , to 

#add auto adding to list to Q_thread_loop for closing threads in end
# add close threads to closeEvent for template

# add grid option for radio button/tick button

# make select folder and select file classes->maybe in same object? i e pressing in seleciton changes it. i want selectd result to be changeable and also maybe auto generate fodlers

# make radio options side by side or event auto go to next line. same for tickbox

# make remaining helper with label classes

# make options collacpasble

# save window layout for next start
# save values for next start? or somehow a way to set default->small button with symbol where for hover it appears as text


# button.setToolTip("This is a tooltip that appears on hover.")
# tooltip over whole area?

# save and open project options

# make settings gray out able

# addd value.setter and property to all classes

# add _ to methods and attributes that should not be used

# GUI thread
# get and prepare image thread
# fit gaussian thread
#


######################################
#               optional
#########################################

# dark mode ->system default

# allow for color and bg color in terminal

# update options for githubt
